#!/bin/bash

alias sba=". ~/.bashrc"
alias ssba=". ~/.bash_profile"
alias crc="test -f "$(command -v code)" && code ~/.dotfiles || vim ~/.dotfiles"
alias dotfiles="${HOME}/.dotfiles/bootstrap"

alias ssh="/bin/ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=10"
alias ntpon="timedatectl set-ntp yes"
alias ntpoff="timedatectl set-ntp no"

alias gb="git branch --sort=-committerdate"
alias gba="git branch -a --sort=-committerdate"
alias gss="git status --short"
alias gssu="gss --untracked-files=no"
alias gll="git log"
alias gaa="git add ."
alias gmm="git commit"
alias gma="git commit -a"
alias gmd="git commit --amend"
alias gdd="git diff"
alias gdt="git difftool"
alias gpl="git pull"
alias gsu="git submodule update --init"
alias gcf="git clean -fd"

alias gits="git multi"
alias gsb="gits branch"
alias gsba="gits branch -a"
alias gsss="gits status"
alias gsssu="gsss --untracked-files=no"
alias gsll="gits log"
alias gsdd="gits diff"

test -f "$(command -v exa)" && alias ls="exa"
test -f "$(command -v fd)" && alias fd="fd --hidden --no-ignore "
test -f "$(command -v fdfind)" && alias fd="fdfind --hidden --no-ignore "
test -f "$(command -v batcat)" && alias bat="batcat"
alias ll="ls -lh"
alias la="ls -lha"
alias cls="clear"
alias c="code ."
alias line="wc -l"
alias word="wc -w"
alias byte="wc -c"
alias bat="bat --color=always"
alias mmem="ps aux --sort=-%mem | head -n 20"
alias mm="make -j$(nproc)"

alias tt="tldr"
alias rr="ranger"
# ff alias for thefuck
# ll alias for ls -lh
# mm alias for make
alias gg="gitui"
alias pp="tgpt"

test -f "$(command -v fzf)" && eval "$(fzf --bash)"
test -f "$(command -v zoxide)" && eval "$(zoxide init bash)"
test -f "$(command -v zoxide)" || alias z="cd"
test -f "$(command -v thefuck)" && eval $(thefuck --alias ff)

function _builtin_cd() {
    builtin cd "$@" &&
    if [[ -f ".autorun" ]]; then
        source .autorun
    fi
}

function _zoxide_cd() {
    z "$@" &&
    if [[ -f ".autorun" ]]; then
        source .autorun
    fi
}

alias cd="_builtin_cd"
alias z="_zoxide_cd"
alias cd-="_builtin_cd -"
alias cd..="_builtin_cd .."
alias z-="_zoxide_cd -"
alias z..="_zoxide_cd .."
alias ..="_zoxide_cd .."
alias ...="_zoxide_cd .."
alias ....="_zoxide_cd ../.."

alias zc='__zc() { local cur=$(pwd) && z "$@" && echo $(pwd) && code . && z ${cur}; } && __zc'

_vv() {
    venv_dir="$HOME/venvs"
    venv_list=$(ls $venv_dir)
    local pre cur opts
    COMPREPLY=()
    pre="${COMP_WORDS[COMP_CWORD-1]}"
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=($(compgen -W "${venv_list}" -- ${cur}))
}
test -x "vv" && unalias vv
complete -F _vv vv
alias vv='__vv() {
    if [ "$1" == "create" ]; then
        shift
        python3 -m venv $HOME/venvs/"$1"
        complete -F _vv vv
    elif [ "$1" == "delete" ]; then
        shift
        rm -rf $HOME/venvs/"$1"
        complete -F _vv vv
    else
        source $HOME/venvs/"$1"/bin/activate
    fi
} && __vv'

_swap() {
    left=$1
    right=$2
    left_tmp=$left.$RANDOM
    if [[ -f $left_tmp || -d $left_tmp ]]; then
        echo "try again!"
        return 1
    fi
    if [[ ! -f $left && ! -d $left ]]; then
        echo "$left not exsit!"
        return 1
    fi
    if [[ ! -f $right && ! -d $right ]]; then
        echo "$right not exsit!"
        return 1
    fi
    rename $left $left_tmp $left
    rename $right $left $right
    rename $left_tmp $right $left_tmp
}
alias swap='_swap'

alias ntpon="timedatectl set-ntp yes"
alias ntpoff="timedatectl set-ntp no"
alias makearm="make CROSS_COMPILE=aarch64-linux-gnu-"
alias netrestart="sudo systemctl restart NetworkManager.service"
